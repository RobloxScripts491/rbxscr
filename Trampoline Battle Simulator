local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/RobloxScripts491/rbxscr/refs/heads/main/barislib",true))()
local tab = library:CreateWindow("Trampoline Battle Simulator")

-- Cash Adder with number validation
tab:AddBox({
    text = "Leg Power Adder",
    value = "",
    callback = function(value, enter)
        if enter then
            local numValue
            if value:lower() == "inf" then
                numValue = inf
            else
                -- Allow scientific notation (e.g., 9e28) and regular numbers
                numValue = tonumber(value)
                if not numValue then
                    library:sednotification("Error!", "Please enter a number!", 3)
                    return
                end
            end
            
            local args = {
	(value)
}
game:GetService("ReplicatedStorage"):WaitForChild("Event"):WaitForChild("Train"):FireServer(unpack(args))


        end
    end,
    flag = "textbox"
})

tab:AddBox({
    text = "Trophy Adder",
    value = "",
    callback = function(value, enter)
        if enter then
            local numValue
            if value:lower() == "inf" then
                numValue = inf
            else
                -- Allow scientific notation (e.g., 9e28) and regular numbers
                numValue = tonumber(value)
                if not numValue then
                    library:sednotification("Error!", "Please enter a number!", 3)
                    return
                end
            end
            
            local args = {
	(value)
}
game:GetService("ReplicatedStorage"):WaitForChild("Event"):WaitForChild("WinGain"):FireServer(unpack(args))


        end
    end,
    flag = "textbox"
})

tab:AddBox({
    text = "Free Multiplier",
    value = "",
    callback = function(value, enter)
        if enter then
            local numValue
            if value:lower() == "inf" then
                numValue = 9e28
            elseif value:lower() == "nan" then
                numValue = 1
            else
                -- Allow scientific notation (e.g., 9e28) and regular numbers
                numValue = tonumber(value)
                if not numValue then
                    library:sednotification("Error!", "Please enter a number!", 3)
                    return
                end
            end
            
            local args = {
                0,
                numValue
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Event"):WaitForChild("Enchanted"):FireServer(unpack(args))
        end
    end,
    flag = "textbox"
})



tab:AddButton({
    text = "Get Gust Multiplier(x150K)",
    callback = function()
        local args = {
            "Gust",
            0
        }
        game:GetService("ReplicatedStorage").Event.BuyPower:FireServer(unpack(args))
        
        local args = {
            "Gust",
            game:GetService("Players").LocalPlayer.Character
        }
        game:GetService("ReplicatedStorage").Event.EquipEffect:FireServer(unpack(args))
    end
})


tab:AddButton({
    text = "Get Best Pet",
    callback = function()
        local replicatedStorage = game:GetService("ReplicatedStorage")
        local pev = replicatedStorage:WaitForChild("PEV", 5) -- 5 saniye timeout
        local craft = pev and pev:WaitForChild("CRAFT", 5) -- 5 saniye timeout

        if craft then
            local args = {"Soul Warden", "Big"}
            craft:FireServer(table.unpack(args)) -- veya ...args
        else
        end
    end
})

local trophyLoop
tab:AddToggle({
    text = "Infinite Rebirth",
    flag = "trophy_toggle",
    callback = function(v)
        if v then
            trophyLoop = game:GetService("RunService").Heartbeat:Connect(function()
                local args = {
                    0
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Event"):WaitForChild("HealthAdd"):FireServer(unpack(args))
                
                wait(0.1)
            end)
        else
            if trophyLoop then
                trophyLoop:Disconnect()
                trophyLoop = nil
            end
        end
    end
})
-- Links dropdown
tab:AddList({
    text = "Links",
    values = {"YT Channel(copy link)"},
    callback = function(value)
        setclipboard("https://www.youtube.com/@BarisScripts1")
    end,
    open = false,
    flag = "color_option"
})

-- Toggle UI keybind
tab:AddBind({
    text = "Toggle UI",
    key = "X",
    hold = false,
    callback = function()
        library:Close()
    end
})

-- Author label
tab:AddLabel({
    text = "By Baris.",
    type = "label"
})

library:Init()
